{"tagline":"Installer & smart package manager for Meteor","body":"*Making Meteor devs happy since 2012*\r\n\r\n## What is it?\r\n\r\nA Meteor installer, and smart-package manager wrapped around the meteor command line interface. (Inspired by gem, bundler & rvm)\r\n\r\n## How do I use it?\r\n\r\nAt the heart of Meteorite is a command line tool is called `mrt`. It wraps the `meteor` command and for the most part you use it just like you're using `meteor`. Let's say I'm building a new app and I'd like to develop against Meteor's development branch:\r\n\r\n    mrt create cool-app --branch=devel\r\n\r\nMeteorite assumes `master` branch in most places so you don't always have to specify this. `mrt create` also supports specifying meteor by `--tag` or `--ref`.\r\n\r\nTo run an app use `mrt run` (or simply `mrt`):\r\n\r\n    mrt run --port=2222\r\n\r\nThe charm of `mrt run` is that it installs the correct version of `meteor` and your app's smart package dependencies and runs your app in that context. `mrt` determines the correct version of `meteor` and smart package dependences by looking for a file called `smart.json` in the root of your app. A simple app's `smart.json` might look like this:\r\n\r\n    {\r\n      \"meteor\": {\r\n        \"branch\": \"devel\"\r\n      },\r\n      \"packages\": {\r\n        \"cool-tool\": {\r\n          \"git\": \"https://github.com/possibilities/cool-tool.git\",\r\n          \"tag\": \"v0.0.2\"\r\n        },\r\n        \"another-tool\": {\r\n          \"git\": \"https://github.com/possibilities/another-tool.git\"\r\n        }\r\n      }\r\n    }\r\n\r\nA couple interesting things that might not be obvious here\r\n\r\n  * The smart package author doesn't have to do anything except make the repo available. `mrt` will look for `package.js` in the repo and install it for you in the app specific meteor installation\r\n  \r\n  * If the smart package has it's own dependencies and the author wants to be awesome they can include a `smart.json` listing the package's own dependencies and everything will get sorted out by `mrt` (i.e. smart package dependencies will be installed recursively).\r\n\r\n  * The first time `mrt` is run for an app it writes out a file called `smart.lock` which it uses on subsequent runs to make sure the app is using the correct versions of each dependency even when it's set up in a fresh environment. Generally you'll commit `smart.lock` into your repo each time it changes so that any developer who clones your app will be running the correct versions. If you change a version in `smart.json` it takes precedence over `smart.lock`.\r\n  \r\nIf you just want to *warm up* your app you can do the install only without running any underlying `meteor` command with `mrt install`.\r\n\r\nAdditionally you can *blow away* `smart.lock` and get everything to update using `mrt update` (`mrt update PACKAGE_NAME` coming *eventually*).\r\n\r\n## Installation\r\n\r\n    npm install -g meteorite\r\n\r\n## How does it work?\r\n\r\nWhen you run your app with `mrt`:\r\n\r\n  1) It installs an app specific instance of `meteor`\r\n\r\n  2) Installs the app's smart package dependencies specified in `smart.json`\r\n  \r\n  3) If the app's smart packages have dependencies of their own (also defined in `smart.json`) they're installed, recursively\r\n\r\n  4) A `smart.lock` file is written to the project's root dir\r\n\r\n  5) With everything installed the app's `meteor` instance takes over and runs your app. All of `meteor`'s subcommands are supported (e.g. `run`, `add`, `deploy`, `bundle`, etc).\r\n\r\n## Configuration\r\n\r\nA sample `smart.json`\r\n\r\n    {\r\n      \"packages\": {\r\n        \"appstrap\": {\r\n          \"git\": \"https://github.com/possibilities/meteor-appstrap.git\",\r\n          \"ref\": \"2911ce4e\"\r\n        },\r\n        \"test-package\": {\r\n          \"path\": \"/path/to/local/package\"\r\n        }\r\n      }\r\n    }\r\n\r\nTwo things worth noting\r\n\r\n  * `meteor` isn't specified so it will be installed from the current `master` branch which is the latest stable release.\r\n  \r\n  * `test-package` is setup to run from a local path. This is useful for developing smart packages for Meteor with Meteorite.\r\n\r\n## Contributing\r\n\r\nSee [Contributing](https://github.com/possibilities/meteorite/wiki/Contributing)\r\n","name":"Meteorite","google":"UA-33060395-1","note":"Don't delete this file! It's used internally to help with page regeneration."}